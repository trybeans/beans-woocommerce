<?xml version="1.0"?>
<ruleset name="PHPCodeSniffer Beans Config">
    <file>src</file>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
<!--    <rule ref="PEAR.NamingConventions.ValidFunctionName"/>-->
    <rule ref="PEAR.NamingConventions.ValidVariableName"/>

<!--    <rule ref="WordPress.NamingConventions.ValidFunctionName"/>-->
<!--    <rule ref="WordPress.NamingConventions.ValidHookName"/>-->
<!--    <rule ref="WordPress.NamingConventions.ValidVariableName"/>-->

    <rule ref="PSR12">
<!--        <exclude name="PSR1.Methods.CamelCapsMethodName"/>-->
        <exclude name="PSR1.Files.SideEffects"/>
        <exclude name="PSR2.Classes.PropertyDeclaration"/>
        <exclude name="PSR12.Properties.ConstantVisibility.NotFound"/>
        <exclude name="Squiz.Classes.ValidClassName"/>
    </rule>

    <!-- 
        This file extends from a core class of wordpress and they are not using camelcase convention for methods names. 
    -->
    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>src/server/Api.php</exclude-pattern>
    </rule>
</ruleset>