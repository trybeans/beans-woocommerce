name: Deploy to SVN - Release

on:
  push:
    branches:
      - release  # Adjust this to match your branch name

jobs:
  validate: 
    runs-on: ubuntu-latest
    outputs:
      validVersion: ${{ steps.validate_version.outputs.validVersion }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: validate version
      id: validate_version
      run: |
        
        readmeReleaseVersion=$(sed -n 's/Stable tag: //p' src/readme.txt | egrep -o '[0-9]\.[0-9]\.[0-9]')
        phpFileReleaseVersion=$(sed -n 's/Version: //p' src/beans-woocommerce.php | egrep -o '[0-9]\.[0-9]\.[0-9]')
        beansReleaseVersion=$(sed -n 's/const VERSION = //p' src/includes/Beans.php| egrep -o '[0-9]\.[0-9]\.[0-9]')

        if [[ "$readmeReleaseVersion" == "$phpFileReleaseVersion" ]] && [[ "$readmeReleaseVersion" == "$beansReleaseVersion" ]] && [[ "$phpFileReleaseVersion" == "$beansReleaseVersion" ]]; then
          echo "The version in all file are equal"
          echo "validVersion=true" >> "$GITHUB_ENV"
          echo "validVersion=true" >> "$GITHUB_OUTPUT"
        else
          echo "The version in all file are not equal"
          summary="The version in the readme.txt $readmeReleaseVersion, beans-woocommerce.php $phpFileReleaseVersion  and Beans.php $beansReleaseVersion  file are differents. Please update the version and recommit the files"
          echo "SUMMARY=$summary" >> "$GITHUB_ENV"  
          echo "validVersion=false" >> "$GITHUB_ENV"
          echo "validVersion=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Post to a Slack channel
      if: ${{ env.validVersion == 'false' }}
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text":  "${{ env.SUMMARY }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ needs.validate.outputs.validVersion == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SVN
      run: sudo apt-get install subversion

    - name: Deploy to SVN
      run: |
        svn checkout --non-interactive --no-auth-cache --username ${{ secrets.SVN_USERNAME }} --password ${{ secrets.SVN_PASSWORD }} ${{ secrets.SVN_REPO_URL }}   woocommerce-loyalty-rewards
       
        cp -r assets/* woocommerce-loyalty-rewards/assets/
        cp -r src/* woocommerce-loyalty-rewards/trunk/

        cd woocommerce-loyalty-rewards
        
        svn add . --force

        releaseVersion=$(sed -n 's/Stable tag: //p' trunk/readme.txt | egrep -o '[0-9]\.[0-9]\.[0-9]')
        
        if [ -d "tags/$releaseVersion" ]; then  echo "Directory exist. Removing directory tags/$releaseVersion" && svn rm tags/$releaseVersion; else echo "Directory does not exist."; fi
        if [ -d "tags/$releaseVersion" ]; then  echo "Directory exist."; else echo "Directory does not exist. Creating directory tags/$releaseVersion " &&  mkdir -p tags/$releaseVersion; fi
        
        svn copy --parents trunk/* tags/$releaseVersion
        svn add . --force
        svn commit -m "Automatic release from GitHub Action"   --username ${{ secrets.SVN_USERNAME }} --password ${{ secrets.SVN_PASSWORD }}
        svn update

        summary="The Beans Woocommerce plugin has been release. You can find the updated plugin at ${{ secrets.SVN_REPO_URL }}/tags"
        echo "SUMMARY=$summary" >> "$GITHUB_ENV"

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text":  "${{ env.SUMMARY }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK