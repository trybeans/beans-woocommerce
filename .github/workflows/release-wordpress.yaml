name: Deploy to SVN

on:
  push:
    branches:
      - release  # Adjust this to match your branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SVN
      run: sudo apt-get install subversion

    - name: Deploy to SVN
      run: |
        svn checkout --non-interactive --no-auth-cache --username ${{ secrets.SVN_USERNAME }} --password ${{ secrets.SVN_PASSWORD }} ${{ secrets.SVN_REPO_URL }}   woocommerce-loyalty-rewards
       
        cp -r assets/* woocommerce-loyalty-rewards/assets/
        cp -r src/* woocommerce-loyalty-rewards/trunk/

        cd woocommerce-loyalty-rewards
        
        svn add . --force

        releaseVersion=$(sed -n 's/Stable tag: //p' trunk/readme.txt)
        
        if [ -d "tags/$releaseVersion" ]; then  echo "Directory exist. Removing directory tags/$releaseVersion" && svn rm tags/$releaseVersion; else echo "Directory does not exist."; fi
        if [ -d "tags/$releaseVersion" ]; then  echo "Directory exist."; else echo "Directory does not exist. Creating directory tags/$releaseVersion " &&  mkdir -p tags/$releaseVersion; fi
        
        svn copy --parents trunk/* tags/$releaseVersion
        svn add . --force
        svn commit -m "Automatic release from GitHub Action"   --username ${{ secrets.SVN_USERNAME }} --password ${{ secrets.SVN_PASSWORD }}
        svn update
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text":  "The Beans Woocommerce plugin has been release. You can find the updated plugin at ${{ secrets.SVN_REPO_URL }}/tags"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK